#"""""""""""""""""""""""""""""""""""""" 
#" GPG.CONF file:
#"
#" Denis Zanin
#" https://github.com/deniszanin/dotfiles
#" 
#""""""""""""""""""""""""""""""""""""""
# PRIVACY CONCERN CONFIGURATION FILE
#
# This is an implementation of the GnuPG: Using the GNU Privacy Guard official doc.
# Source: https://gnupg.org/documentation/manuals/gnupg.pdf
#
# Combined with an obsolete version of gpg.conf from @ioerror:
#
# This is an implementation of the Riseup OpenPGP Best Practices
# Source: https://help.riseup.net/en/security/message-security/openpgp/best-practices
#
# IMPORTANT NOTE
#
# This GnuPG configuration file is a updated version from @ioerror's file
# found over Internet and in Riseup OpenGPG guide. 
#
# @ioerror's file is obsolute and cannot be used anymore due to changes in
# GnuPG version and options.
#
# WHAT YOU HAVE TO DO
#
# - Copy gpg.conf and dirmngr.conf files to your $HOME_DIR/.gnupg
# - Uncomment and type your default key in the 'default-key' option (in this file).
# - Have a close look to all options available here and do change to your needs.
# - Don't trust this configuration file.
#
# - Use TOR?
# - Make changes to dirmngr.conf file.
#
#

#-----------------------------
# default key
#-----------------------------

# The default key to sign with. If this option is not used, the default key is
# the first key found in the secret keyring
#
# DOC.: Use NAME as the default key to sign with. If this option is not used, the 
# default key is the first key found in the secret keyring. Note that '-u' or 
# '--local-user' overrides this option. This option may be given multiple times.
# In this case, the last key for which a secret key is available is used. If there
# is no secret key available for any of the specified values, GnuPG will not emit 
# an error message but continue as if this option wasn't given.
#
# default-key TYPE_YOUR_KEY_HERE

#-----------------------------
# behavior
#-----------------------------

# No copyright notice
#
# DOC.: Supress the initial copyright message.
no-greeting

# Disable inclusion of the version string in ASCII armored output
#
# DOC.: Force inclusion of the verstion string in ASCII armored output. If
# given once only the name of the program and the major number is emitted, given
# twice the minor is also emitted, give thrice the micro is added, and given four
# times an operating system identification is also emitted. '--no-emit-version'
# (default) disables the version line.
no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages
#
# DOC.: The default behavior is not to use a comment string. '--coment' may be
# repeated multiple times to get multiple comment strings. '--no-comments'
# removes all comments. It is a good idea to keep the length of a single comment
# below 60 characters to avoid problems with mail programs wrapping such lines.
# Note that comment lines, like all other header lines, are not protected by the
# signature.
no-comments

# Display long key IDs
#
# DOC.: Select how to display key IDs. 'none' does not show the key ID at all but
# shows the fingerprint in a separate line. 'short' is the traditional 8-character
# key ID. 'long' is the more accurate (but less convenient) 16-character key ID.
# Add na 'ox' to either to include an '0x' at the begging of the key ID, as in
# 0x99242560. Note that this option is ignored if the option '--with-colons' is
# used.
keyid-format 0xlong

# List all keys (or the specified ones) along with their fingerprints
#
# DOC.: Same as the command '--fingerprint' but changes only the format
# of the output and may be used together with another command.
with-fingerprint

# Display the calculated validity of user IDs during key listings
#
# DOC.: This is a space or comma delimited string that gives options used
# when listing keys and signatures (that is, '--list-keys', '--check-signatures',
# '--list-public-keys', '--list-secret-keys', and the '--edit-key' functions).
# Options can be prepended with a 'no-' to give the opposite meaning.
#
# - show-uid-valitiry: Display the calculated validity of user IDs during key 
# listings. Defaults to yes.
list-options show-uid-validity

# DOC.: This is a space or comma delimited string that gives options used when
# verifying signatures. Options can be prepended with a 'no-' to give the 
# opposite meaning.
#
# - show-uid-validity: Display the calculated validity of the user IDs on the key
# that issued the signature. Defaults to yes.
verify-options show-uid-validity

# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
# the agent before it asks for a passphrase.
# 
# DOC.:  This is dummy option. gpg always requires the agent.
use-agent

# DOC.: Refuse to run if GnuPG cannot get secure memory.
# Defaults to no (i.e. run, but give a warning).
require-secmem

# DOC.: When verifying a signature made from a subkey, ensure that the cross
# certification 'back signature' on the subkey is present and valid. This 
# protects against a subtle attack agains subkeys that can sign. Default to
# '--require-cross-certification' for gpg.
require-cross-certification

# DOC.: Because some mailers change lines starting with 'From ' to '>From ' it
# is good to handle such lines in a special way when creating cleartext signatures
# to prevent the mail system from breaking the signature. Note that all other PGP
# versions do it whis way too. Enabled by default. '--no-escape-from-lines' 
# disables this option.
escape-from-lines

#-----------------------------
# are u sure, user?
#-----------------------------

# DOC.: Prompt before overwriting any files.
interactive

# DOC.: Enable certain PROGRESS status outputs. This option allows frontends to
# display a progress indicator while gpg is processing larger files. There is a 
# slight performance overhead using it.
enable-progress-filter

# DOC.: Specify how many times gpg will request a new passphrase be repeated. 
# This is useful for helping memorize a passphrase. Defaults to 1 repetition.
passphrase-repeat 2

# DOC.: The default expiration time to use for key signature expiration. 
# Valid values are "0" for no expiration, a number followed by the 
# letter d (for days), w (for weeks), m (for months), or y (for years) 
# (for example "2m" for two months, or "5y" for five years), or an absolute 
# date in the form YYYY-MM-DD. Defaults to "0".
default-cert-expire 2y

# DOC.: When making a key signature, prompt for an expiration time. If this 
# option is not specified, the expiration time set via ‘--default-cert-expire’ 
# is used. ‘--no-ask-cert-expire’ disables this option.
ask-cert-expire

#-----------------------------
# keyserver
#-----------------------------

# --keyserver NAME
# DOC.: This option is deprecated, please use '--keyserver' in dirmngr.conf
# instead.
# 
# SEE dirmngr.conf FILE

# --keyserver-options {NAME=value}
#
# DOC.: This is a space or comma delimited string that gives options for the
# keyserver. Options can be prefixed with a 'no-' to give the opposite meaning.
# Valid import-options or export-options may be used here as well to apply to 
# importing ('--recv-keys') or exporting ('--send-keys') a key from a keyserver.
# Not all options are available for all keyserver.

# FOR Tor usage ONLY
#
# Set the proxy to use for HTTP and HKP keyservers - default to the standard
# local Tor socks proxy
# It is encouraged to use Tor for improved anonymity. Preferrably use either a
# dedicated SOCKSPort for GnuPG and/or enable IsolateDestPort and
# IsolateDestAddr
# keyserver-options http-proxy=socks5://127.0.0.1:9050

# --no-try-dns-srv
# Note: this option is obsolete. It does NOT work with updated GnuPG versions.

# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, then disable use of that preferred keyserver to refresh the key from
#
# DOC.: When using '--refresh-keys', if the key in question has a preferred 
# keyserver URL, the use that preferred keyserver to refresh the key from. In 
# addition, if auto-key-retrieve is set, and the signatue being verified has
# a preferred keyserver URL, the use that preferred keyserver to fetch the
# key from. Note tha this option introduces a 'web bug': The creator of the
# key can see when the keys is refreshed. Thus this option is not enabled by
# default.
keyserver-options no-honor-keyserver-url

# When searching for a key with --search-keys, include keys that are marked on
# the keyserver as revoked
#
# DOC.: When searching for a key with '--search-keys', include keys that are 
# marked on the keyserver as revoked. Note that not all keyservers differentiate
# between revoked and unrevoked keys, and for such keyservers this option is 
# meaningless. Note also that most keyservers do not have cryptographic 
# verification of key revocations, and so turning this option off may result in
# skipping keys that are incorrectly marked as revoked.
keyserver-options include-revoked

#-----------------------------
# algorithm and ciphers
#-----------------------------

# List of personal cipher preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one
#
# DOC.: Set the list of personal cipher preferences to STRING. Use 'gpg --version' 
# to get a list of available algorithms, and use none to set no preference at all. 
# This allows the user to safely override the algorithm chosen by the recipient key 
# preferences, as GPG will only select an algorithm that is usable by all recipients. 
# The most highly ranked cipher in this list is also used for the ‘--symmetric’ 
# encryption command.
personal-cipher-preferences AES256 AES192 AES CAST5

# List of personal digest preferences. When multiple digest are supported by
# all recipients, choose the strongest one
#
# DOC.: Set the list of personal digest preferences to string. Use 'gpg --version' 
# to get a list of available algorithms, and use none to set no preference at all. 
# This allows the user to safely override the algorithm chosen by the recipient key 
# preferences, as GPG will only select an algorithm that is usable by all recipients. 
# The most highly ranked digest algorithm in this list is also used when signing 
# without encryption (e.g. ‘--clear-sign’ or ‘--sign’).
personal-digest-preferences SHA512 SHA384 SHA256

# Message digest algorithm used when signing a key
#
# DOC.: Use NAME as the message digest algorithm used when signing a key. Running the
# program with the command ‘--version’ yields a list of supported algorithms.
# Be aware that if you choose an algorithm that GnuPG supports but other
# OpenPGP implementations do not, then some users will not be able to use the
# key signatures you make, or quite possibly your entire key.
cert-digest-algo SHA512

# DOC.: Never allow the use of name as cipher algorithm. The given name will not be
# checked so that a later loaded algorithm will still get disabled.
disable-cipher-algo 3DES DES IDEA BLOWFISH

# DOC.: Never allow the use of name as public key algorithm. The given name will not
# be checked so that a later loaded algorithm will still get disabled.
disable-pubkey-algo DSA

# DOC.: Treat the specified digest algorithm as weak. Signatures made over weak
# digests algorithms are normally rejected. This option can be supplied
# multiple times if multiple algorithms should be considered weak. See also
# ‘--allow-weak-digest-algos’ to disable rejection of weak digests. MD5 is
# always considered weak, and does not need to be listed explicitly.
weak-digest SHA1

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu
#
# DOC.: Set the list of default preferences to string. This preference list 
# is used for new keys and becomes the default for "setpref" in the edit menu. 
default-preference-list SHA512 SHA384 SHA256 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

# DOC: This option can be used to change the default algorithms for key
# generation. The string is similar to the arguments required for the
# command ‘--quick-add-key’ but slightly different. 
# For example the current default of "rsa2048/cert,sign+rsa2048/encr" 
# (or "rsa3072") can be changed to the value of what we currently call 
# future default, which is "ed25519/cert,sign+cv25519/encr". 
# You need to consult the source code to learn the details. 
# Note that the advanced key generation commands can always be used to 
# specify a key algorithm directly.
default-new-key-algo rsa4096/cert,sign+rsa4096/encr
